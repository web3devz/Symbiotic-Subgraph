// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class VaultCreated extends ethereum.Event {
  get params(): VaultCreated__Params {
    return new VaultCreated__Params(this);
  }
}

export class VaultCreated__Params {
  _event: VaultCreated;

  constructor(event: VaultCreated) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateral(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get delegator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get slasher(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get admin(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class VaultFactory extends ethereum.SmartContract {
  static bind(address: Address): VaultFactory {
    return new VaultFactory("VaultFactory", address);
  }
}
